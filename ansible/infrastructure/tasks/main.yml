---
- name: Create security group
  ec2_group:
    name: "{{ project_name }}_security_group"
    description: "{{ project_name }} security group"
    region: "{{ region }}"
    rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # https
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: test_firewall

- name: Create an EC2 key
  ec2_key:
    name: "{{ project_name }}-{{ env }}-key"
    region: "{{ region }}"
  register: ec2_key

- name: Save private key
  copy: content="{{ ec2_key.key.private_key }}" dest="/root/aws-private.pem" mode=0600
  when: ec2_key.changed

- name: Create  EC2 instances
  ec2:
    key_name: "{{ project_name }}-{{ env }}-key"
    region: "{{ region }}"
    group_id: "{{ test_firewall.group_id }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    wait: yes
    instance_tags:
        env: "{{ env }}"
    count_tag: env
    exact_count: 2
  register: ec2

- name: Tagging Jenkins Instances
  ec2_tag:
    region: "{{ region }}"
    resource: "{{ ec2.instances[0].id }}"
    state: present
    tags:
      Name: "jenkins"

- name: Tagging Docker Instances
  ec2_tag:
    region: "{{ region }}"
    resource: "{{ ec2.instances[1].id }}"
    state: present
    tags:
      Name: "docker"

- name: Add Jenkins EC2 instance(s) to host group
  lineinfile: dest={{ hostpath }}
              regexp={{ ec2.instances[0].public_ip }} 
              insertafter="^\[Jenkins]" 
              line="{{ ec2.instances[0].public_ip }} {{ hoststring }}"
              state=present

- name: Add Docker EC2 instance(s) to host group
  lineinfile: dest={{ hostpath }}
              regexp={{ ec2.instances[1].public_ip }}
              insertafter="^\[Docker]"
              line="{{ ec2.instances[1].public_ip }} {{ hoststring }}"
              state=present

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip }}
                port=22
                state=started
  with_items: "{{ec2.instances}}"
